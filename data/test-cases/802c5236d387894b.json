{
  "uid" : "802c5236d387894b",
  "name" : "T19: Update user info with an empty name.",
  "fullName" : "tests.test_user_authentication.TestUserAuthentication#test_update_user_info_with_empty_name",
  "historyId" : "34671eae70af7125824f3f375f46e834",
  "time" : {
    "start" : 1737381747254,
    "stop" : 1737381748139,
    "duration" : 885
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e57736eb12444f2b4699e', 'name': '', 'email': 'atkinsmichael@example.com', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM3Mzg1MzQ3fQ.jEkBA6rnbXWSs37FhxP5SexLsCEN6cnwuqv4P4LXQu4', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM5OTczNzQ3fQ.t_UUsD3aNDyLGiwDlO-O4b2LoUtPL1T6OqLLk_MTuDA', 'phone': '(957)830-5351x52687', 'birthday': '2009-07-31', 'skype': 'matthew94', 'userImgUrl': 'https://dummyimage.com/474x772', 'userTasks': []}",
  "statusTrace" : "self = <test_user_authentication.TestUserAuthentication object at 0x7fc4b5a80710>\n\n    @pytest.mark.order(19)\n    @allure.title(\"T19: Update user info with an empty name.\")\n    def test_update_user_info_with_empty_name(self):\n        user = self.api_user_auth.create_user()\n>       self.api_user_auth.update_user_info_with_empty_name(Token=user.data.accessToken)\n\ntests/test_user_authentication.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/UserAuth/api_user_auth.py:229: in update_user_info_with_empty_name\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.UserAuth.api_user_auth.UserAuthAPI object at 0x7fc4b51b2710>\nresponse = <Response [200]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e57736eb12444f2b4699e', 'name': '', 'email': 'atkinsmichael@example.com', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM3Mzg1MzQ3fQ.jEkBA6rnbXWSs37FhxP5SexLsCEN6cnwuqv4P4LXQu4', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM5OTczNzQ3fQ.t_UUsD3aNDyLGiwDlO-O4b2LoUtPL1T6OqLLk_MTuDA', 'phone': '(957)830-5351x52687', 'birthday': '2009-07-31', 'skype': 'matthew94', 'userImgUrl': 'https://dummyimage.com/474x772', 'userTasks': []}\n\nutils/helper.py:13: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1737381736539,
      "stop" : 1737381736540,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_method_fixture_TestUserAuthentication",
    "time" : {
      "start" : 1737381747253,
      "stop" : 1737381747253,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e57736eb12444f2b4699e', 'name': '', 'email': 'atkinsmichael@example.com', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM3Mzg1MzQ3fQ.jEkBA6rnbXWSs37FhxP5SexLsCEN6cnwuqv4P4LXQu4', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM5OTczNzQ3fQ.t_UUsD3aNDyLGiwDlO-O4b2LoUtPL1T6OqLLk_MTuDA', 'phone': '(957)830-5351x52687', 'birthday': '2009-07-31', 'skype': 'matthew94', 'userImgUrl': 'https://dummyimage.com/474x772', 'userTasks': []}",
    "statusTrace" : "self = <test_user_authentication.TestUserAuthentication object at 0x7fc4b5a80710>\n\n    @pytest.mark.order(19)\n    @allure.title(\"T19: Update user info with an empty name.\")\n    def test_update_user_info_with_empty_name(self):\n        user = self.api_user_auth.create_user()\n>       self.api_user_auth.update_user_info_with_empty_name(Token=user.data.accessToken)\n\ntests/test_user_authentication.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/UserAuth/api_user_auth.py:229: in update_user_info_with_empty_name\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.UserAuth.api_user_auth.UserAuthAPI object at 0x7fc4b51b2710>\nresponse = <Response [200]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e57736eb12444f2b4699e', 'name': '', 'email': 'atkinsmichael@example.com', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM3Mzg1MzQ3fQ.jEkBA6rnbXWSs37FhxP5SexLsCEN6cnwuqv4P4LXQu4', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM5OTczNzQ3fQ.t_UUsD3aNDyLGiwDlO-O4b2LoUtPL1T6OqLLk_MTuDA', 'phone': '(957)830-5351x52687', 'birthday': '2009-07-31', 'skype': 'matthew94', 'userImgUrl': 'https://dummyimage.com/474x772', 'userTasks': []}\n\nutils/helper.py:13: AssertionError",
    "steps" : [ {
      "name" : "Create a new user.",
      "time" : {
        "start" : 1737381747254,
        "stop" : 1737381747752,
        "duration" : 498
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "cbe2399724c92d24",
        "name" : "API Response",
        "source" : "cbe2399724c92d24.json",
        "type" : "application/json",
        "size" : 513
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Update user info with empty name.",
      "time" : {
        "start" : 1737381747752,
        "stop" : 1737381748138,
        "duration" : 386
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e57736eb12444f2b4699e', 'name': '', 'email': 'atkinsmichael@example.com', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM3Mzg1MzQ3fQ.jEkBA6rnbXWSs37FhxP5SexLsCEN6cnwuqv4P4LXQu4', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM5OTczNzQ3fQ.t_UUsD3aNDyLGiwDlO-O4b2LoUtPL1T6OqLLk_MTuDA', 'phone': '(957)830-5351x52687', 'birthday': '2009-07-31', 'skype': 'matthew94', 'userImgUrl': 'https://dummyimage.com/474x772', 'userTasks': []}\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/services/UserAuth/api_user_auth.py\", line 229, in update_user_info_with_empty_name\n    self.assert_status(response, 400)\n  File \"/usr/workspace/utils/helper.py\", line 13, in assert_status\n    assert response.status_code == expected_status, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "Token",
        "value" : "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzczNmViMTI0NDRmMmI0Njk5ZSIsImlhdCI6MTczNzM4MTc0NywiZXhwIjoxNzM3Mzg1MzQ3fQ.jEkBA6rnbXWSs37FhxP5SexLsCEN6cnwuqv4P4LXQu4'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestUserAuthentication::0",
    "time" : {
      "start" : 1737381748175,
      "stop" : 1737381748175,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "User Authentication"
  }, {
    "name" : "tag",
    "value" : "order(19)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_user_authentication"
  }, {
    "name" : "subSuite",
    "value" : "TestUserAuthentication"
  }, {
    "name" : "host",
    "value" : "a928bb1cf3d0"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_user_authentication"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "eb3b4ae9139108a9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e4ca96eb12444f2b468cd', 'name': '', 'email': 'beth81@example.org', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0Y2E5NmViMTI0NDRmMmI0NjhjZCIsImlhdCI6MTczNzM3ODk4NSwiZXhwIjoxNzM3MzgyNTg1fQ.thdecsxpcs4ksBfzBZBFvRmKsQGmWojcEz0xs-9LmRg', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0Y2E5NmViMTI0NDRmMmI0NjhjZCIsImlhdCI6MTczNzM3ODk4NSwiZXhwIjoxNzM5OTcwOTg1fQ.EtdMry0JqlsZDsq1zRxJU-L-WX4aVkZAh3TJehNlBEg', 'phone': '637.634.4062', 'birthday': '1956-07-13', 'skype': 'jesus85', 'userImgUrl': 'https://placekitten.com/515/36', 'userTasks': []}",
        "time" : {
          "start" : 1737378985466,
          "stop" : 1737378986620,
          "duration" : 1154
        }
      }, {
        "uid" : "eddc1e1e225cdb33",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e49f56eb12444f2b467f9', 'name': '', 'email': 'lunapaige@example.org', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0OWY1NmViMTI0NDRmMmI0NjdmOSIsImlhdCI6MTczNzM3ODI5MywiZXhwIjoxNzM3MzgxODkzfQ.sBtCc9IKpfGyUbfcHi4tQtjSVNmtLVZnHW4xXyGJZiA', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0OWY1NmViMTI0NDRmMmI0NjdmOSIsImlhdCI6MTczNzM3ODI5MywiZXhwIjoxNzM5OTcwMjkzfQ.KTCU39kJLDqK6b84E9F37GKe5DFFNYMe_Tl4njGfn28', 'phone': '6955829111', 'birthday': '1989-11-21', 'skype': 'knorris', 'userImgUrl': 'https://placekitten.com/89/620', 'userTasks': []}",
        "time" : {
          "start" : 1737378292649,
          "stop" : 1737378293171,
          "duration" : 522
        }
      } ]
    },
    "tags" : [ "order(19)" ]
  },
  "source" : "802c5236d387894b.json",
  "parameterValues" : [ ]
}