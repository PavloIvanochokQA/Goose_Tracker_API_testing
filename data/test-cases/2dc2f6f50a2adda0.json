{"uid":"2dc2f6f50a2adda0","name":"T37: Attempt to delete another user's task.","fullName":"tests.test_task_management.TestTaskManagement#test_delete_another_user_task","historyId":"37857501c205622a070374ef51bec7cc","time":{"start":1737378303307,"stop":1737378304282,"duration":975},"status":"failed","statusMessage":"AssertionError: Expected status code 401, but got 200. Response: {'_id': '678e4a006eb12444f2b46880', 'title': 'Environmental skill unit.', 'start': '02:05:36', 'end': '03:58:59', 'priority': 'low', 'category': 'done', 'owner': '678e49ff6eb12444f2b4687c', 'date': '2025-01-17T00:00:00.000Z', 'createdAt': '2025-01-20T13:05:04.080Z', 'updatedAt': '2025-01-20T13:05:04.080Z', '__v': 0}","statusTrace":"self = <test_task_management.TestTaskManagement object at 0x000001D25B4664B0>\n\n    @pytest.mark.order(37)\n    @allure.title(\"T37: Attempt to delete another user's task.\")\n    def test_delete_another_user_task(self):\n        new_user = self.api_user_auth.create_user()\n        task = self.api_task.create_task(Token=new_user.data.accessToken)\n        user = self.api_user_auth.login()\n>       self.api_task.delete_another_user_task(Token=user.data.accessToken, task_id=task.id)\n\ntests\\test_task_management.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices\\Task\\api_task.py:205: in delete_another_user_task\n    self.assert_status(response, 401)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.Task.api_task.TaskAPI object at 0x000001D25B67F110>, response = <Response [200]>, expected_status = 401\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 401, but got 200. Response: {'_id': '678e4a006eb12444f2b46880', 'title': 'Environmental skill unit.', 'start': '02:05:36', 'end': '03:58:59', 'priority': 'low', 'category': 'done', 'owner': '678e49ff6eb12444f2b4687c', 'date': '2025-01-17T00:00:00.000Z', 'createdAt': '2025-01-20T13:05:04.080Z', 'updatedAt': '2025-01-20T13:05:04.080Z', '__v': 0}\n\nutils\\helper.py:13: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1737378287248,"stop":1737378287249,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_xunit_setup_method_fixture_TestTaskManagement","time":{"start":1737378303307,"stop":1737378303307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected status code 401, but got 200. Response: {'_id': '678e4a006eb12444f2b46880', 'title': 'Environmental skill unit.', 'start': '02:05:36', 'end': '03:58:59', 'priority': 'low', 'category': 'done', 'owner': '678e49ff6eb12444f2b4687c', 'date': '2025-01-17T00:00:00.000Z', 'createdAt': '2025-01-20T13:05:04.080Z', 'updatedAt': '2025-01-20T13:05:04.080Z', '__v': 0}","statusTrace":"self = <test_task_management.TestTaskManagement object at 0x000001D25B4664B0>\n\n    @pytest.mark.order(37)\n    @allure.title(\"T37: Attempt to delete another user's task.\")\n    def test_delete_another_user_task(self):\n        new_user = self.api_user_auth.create_user()\n        task = self.api_task.create_task(Token=new_user.data.accessToken)\n        user = self.api_user_auth.login()\n>       self.api_task.delete_another_user_task(Token=user.data.accessToken, task_id=task.id)\n\ntests\\test_task_management.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices\\Task\\api_task.py:205: in delete_another_user_task\n    self.assert_status(response, 401)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.Task.api_task.TaskAPI object at 0x000001D25B67F110>, response = <Response [200]>, expected_status = 401\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 401, but got 200. Response: {'_id': '678e4a006eb12444f2b46880', 'title': 'Environmental skill unit.', 'start': '02:05:36', 'end': '03:58:59', 'priority': 'low', 'category': 'done', 'owner': '678e49ff6eb12444f2b4687c', 'date': '2025-01-17T00:00:00.000Z', 'createdAt': '2025-01-20T13:05:04.080Z', 'updatedAt': '2025-01-20T13:05:04.080Z', '__v': 0}\n\nutils\\helper.py:13: AssertionError","steps":[{"name":"Create a new user.","time":{"start":1737378303307,"stop":1737378303620,"duration":313},"status":"passed","steps":[],"attachments":[{"uid":"44cb21496c7722bc","name":"API Response","source":"44cb21496c7722bc.json","type":"application/json","size":522}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"Create a new task.","time":{"start":1737378303620,"stop":1737378303807,"duration":187},"status":"passed","steps":[],"attachments":[{"uid":"b4b98e19bac53fec","name":"API Response","source":"b4b98e19bac53fec.json","type":"application/json","size":363}],"parameters":[{"name":"Token","value":"'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0OWZmNmViMTI0NDRmMmI0Njg3YyIsImlhdCI6MTczNzM3ODMwMywiZXhwIjoxNzM3MzgxOTAzfQ.BWCTh5ai5LuatqGMCJ6mggrlAZ4_eYlrw7vzaKikCWw'"}],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"Log in.","time":{"start":1737378303807,"stop":1737378304098,"duration":291},"status":"passed","steps":[],"attachments":[{"uid":"4a88b13411465e2","name":"API Response","source":"4a88b13411465e2.json","type":"application/json","size":522}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"Attempt to delete another user's task.","time":{"start":1737378304098,"stop":1737378304281,"duration":183},"status":"failed","statusMessage":"AssertionError: Expected status code 401, but got 200. Response: {'_id': '678e4a006eb12444f2b46880', 'title': 'Environmental skill unit.', 'start': '02:05:36', 'end': '03:58:59', 'priority': 'low', 'category': 'done', 'owner': '678e49ff6eb12444f2b4687c', 'date': '2025-01-17T00:00:00.000Z', 'createdAt': '2025-01-20T13:05:04.080Z', 'updatedAt': '2025-01-20T13:05:04.080Z', '__v': 0}\n","statusTrace":"  File \"C:\\Users\\Pavlo\\Desktop\\Goose_Tracker_API_testing\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Pavlo\\Desktop\\Goose_Tracker_API_testing\\services\\Task\\api_task.py\", line 205, in delete_another_user_task\n    self.assert_status(response, 401)\n  File \"C:\\Users\\Pavlo\\Desktop\\Goose_Tracker_API_testing\\utils\\helper.py\", line 13, in assert_status\n    assert response.status_code == expected_status, \\\n","steps":[],"attachments":[],"parameters":[{"name":"Token","value":"'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3N2ZjYjIxNmViMTI0NDRmMmI0MmU5MSIsImlhdCI6MTczNzM3ODMwNCwiZXhwIjoxNzM3MzgxOTA0fQ.vO__5Xn-dsnryRnoSbs-wTmy67A2oc3tmEv7F4EoSFs'"},{"name":"task_id","value":"'678e4a006eb12444f2b46880'"}],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"_xunit_setup_method_fixture_TestTaskManagement::0","time":{"start":1737378304293,"stop":1737378304293,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"Task Management"},{"name":"tag","value":"order(37)"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_task_management"},{"name":"subSuite","value":"TestTaskManagement"},{"name":"host","value":"DESKTOP-0R2QBDF"},{"name":"thread","value":"848-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_task_management"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["order(37)"]},"source":"2dc2f6f50a2adda0.json","parameterValues":[]}