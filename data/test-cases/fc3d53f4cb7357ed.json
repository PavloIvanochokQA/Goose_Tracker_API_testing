{
  "uid" : "fc3d53f4cb7357ed",
  "name" : "T33: Update an existing task with an invalid priority.",
  "fullName" : "tests.test_task_management.TestTaskManagement#test_update_task_with_invalid_priority",
  "historyId" : "fafa0064ecdb363ac8de4c6fb4cb98bc",
  "time" : {
    "start" : 1737381760528,
    "stop" : 1737381761741,
    "duration" : 1213
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'status': 'success', 'task': {'_id': '678e57816eb12444f2b469ff', 'title': 'Note sea lay.', 'start': '15:51:25', 'end': '16:38:30', 'priority': 'back', 'category': 'done', 'owner': '678e57806eb12444f2b469fb', 'date': '2025-01-11T00:00:00.000Z', 'createdAt': '2025-01-20T14:02:41.303Z', 'updatedAt': '2025-01-20T14:02:41.663Z', '__v': 0}}",
  "statusTrace" : "self = <test_task_management.TestTaskManagement object at 0x7fc4b26b60d0>\n\n    @pytest.mark.order(33)\n    @allure.title(\"T33: Update an existing task with an invalid priority.\")\n    def test_update_task_with_invalid_priority(self):\n        user = self.api_user_auth.create_user()\n        task = self.api_task.create_task(Token=user.data.accessToken)\n>       self.api_task.update_task_with_invalid_priority(Token=user.data.accessToken, task_id=task.id)\n\ntests/test_task_management.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/Task/api_task.py:160: in update_task_with_invalid_priority\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.Task.api_task.TaskAPI object at 0x7fc4b51b10d0>\nresponse = <Response [200]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 200. Response: {'status': 'success', 'task': {'_id': '678e57816eb12444f2b469ff', 'title': 'Note sea lay.', 'start': '15:51:25', 'end': '16:38:30', 'priority': 'back', 'category': 'done', 'owner': '678e57806eb12444f2b469fb', 'date': '2025-01-11T00:00:00.000Z', 'createdAt': '2025-01-20T14:02:41.303Z', 'updatedAt': '2025-01-20T14:02:41.663Z', '__v': 0}}\n\nutils/helper.py:13: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestTaskManagement",
    "time" : {
      "start" : 1737381760527,
      "stop" : 1737381760527,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1737381736539,
      "stop" : 1737381736540,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'status': 'success', 'task': {'_id': '678e57816eb12444f2b469ff', 'title': 'Note sea lay.', 'start': '15:51:25', 'end': '16:38:30', 'priority': 'back', 'category': 'done', 'owner': '678e57806eb12444f2b469fb', 'date': '2025-01-11T00:00:00.000Z', 'createdAt': '2025-01-20T14:02:41.303Z', 'updatedAt': '2025-01-20T14:02:41.663Z', '__v': 0}}",
    "statusTrace" : "self = <test_task_management.TestTaskManagement object at 0x7fc4b26b60d0>\n\n    @pytest.mark.order(33)\n    @allure.title(\"T33: Update an existing task with an invalid priority.\")\n    def test_update_task_with_invalid_priority(self):\n        user = self.api_user_auth.create_user()\n        task = self.api_task.create_task(Token=user.data.accessToken)\n>       self.api_task.update_task_with_invalid_priority(Token=user.data.accessToken, task_id=task.id)\n\ntests/test_task_management.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/Task/api_task.py:160: in update_task_with_invalid_priority\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.Task.api_task.TaskAPI object at 0x7fc4b51b10d0>\nresponse = <Response [200]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 200. Response: {'status': 'success', 'task': {'_id': '678e57816eb12444f2b469ff', 'title': 'Note sea lay.', 'start': '15:51:25', 'end': '16:38:30', 'priority': 'back', 'category': 'done', 'owner': '678e57806eb12444f2b469fb', 'date': '2025-01-11T00:00:00.000Z', 'createdAt': '2025-01-20T14:02:41.303Z', 'updatedAt': '2025-01-20T14:02:41.663Z', '__v': 0}}\n\nutils/helper.py:13: AssertionError",
    "steps" : [ {
      "name" : "Create a new user.",
      "time" : {
        "start" : 1737381760528,
        "stop" : 1737381761015,
        "duration" : 487
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "473e286416925ac4",
        "name" : "API Response",
        "source" : "473e286416925ac4.json",
        "type" : "application/json",
        "size" : 525
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Create a new task.",
      "time" : {
        "start" : 1737381761016,
        "stop" : 1737381761380,
        "duration" : 364
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a726e807e388697a",
        "name" : "API Response",
        "source" : "a726e807e388697a.json",
        "type" : "application/json",
        "size" : 358
      } ],
      "parameters" : [ {
        "name" : "Token",
        "value" : "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzgwNmViMTI0NDRmMmI0NjlmYiIsImlhdCI6MTczNzM4MTc2MCwiZXhwIjoxNzM3Mzg1MzYwfQ.FTf2o_XPv9AsD3UnKhy5Ix77cl_ACI74pYhM4MKEllI'"
      } ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Update an existing task with an invalid priority.",
      "time" : {
        "start" : 1737381761380,
        "stop" : 1737381761741,
        "duration" : 361
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'status': 'success', 'task': {'_id': '678e57816eb12444f2b469ff', 'title': 'Note sea lay.', 'start': '15:51:25', 'end': '16:38:30', 'priority': 'back', 'category': 'done', 'owner': '678e57806eb12444f2b469fb', 'date': '2025-01-11T00:00:00.000Z', 'createdAt': '2025-01-20T14:02:41.303Z', 'updatedAt': '2025-01-20T14:02:41.663Z', '__v': 0}}\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/services/Task/api_task.py\", line 160, in update_task_with_invalid_priority\n    self.assert_status(response, 400)\n  File \"/usr/workspace/utils/helper.py\", line 13, in assert_status\n    assert response.status_code == expected_status, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "Token",
        "value" : "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1NzgwNmViMTI0NDRmMmI0NjlmYiIsImlhdCI6MTczNzM4MTc2MCwiZXhwIjoxNzM3Mzg1MzYwfQ.FTf2o_XPv9AsD3UnKhy5Ix77cl_ACI74pYhM4MKEllI'"
      }, {
        "name" : "task_id",
        "value" : "'678e57816eb12444f2b469ff'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestTaskManagement::0",
    "time" : {
      "start" : 1737381761748,
      "stop" : 1737381761748,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Task Management"
  }, {
    "name" : "tag",
    "value" : "order(33)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_task_management"
  }, {
    "name" : "subSuite",
    "value" : "TestTaskManagement"
  }, {
    "name" : "host",
    "value" : "a928bb1cf3d0"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_task_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "7904dd60d2162674",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'status': 'success', 'task': {'_id': '678e4cbb6eb12444f2b4692e', 'title': 'Company magazine.', 'start': '01:07:11', 'end': '02:02:17', 'priority': 'energy', 'category': 'done', 'owner': '678e4cba6eb12444f2b4692a', 'date': '2025-01-03T00:00:00.000Z', 'createdAt': '2025-01-20T13:16:43.606Z', 'updatedAt': '2025-01-20T13:16:44.104Z', '__v': 0}}",
        "time" : {
          "start" : 1737379002554,
          "stop" : 1737379004202,
          "duration" : 1648
        }
      }, {
        "uid" : "7d7856b9c9316ba4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'status': 'success', 'task': {'_id': '678e49fd6eb12444f2b4685a', 'title': 'Law occur discover.', 'start': '12:14:28', 'end': '20:07:52', 'priority': 'add', 'category': 'done', 'owner': '678e49fc6eb12444f2b46856', 'date': '2025-01-11T00:00:00.000Z', 'createdAt': '2025-01-20T13:05:01.066Z', 'updatedAt': '2025-01-20T13:05:01.246Z', '__v': 0}}",
        "time" : {
          "start" : 1737378300307,
          "stop" : 1737378300972,
          "duration" : 665
        }
      } ]
    },
    "tags" : [ "order(33)" ]
  },
  "source" : "fc3d53f4cb7357ed.json",
  "parameterValues" : [ ]
}