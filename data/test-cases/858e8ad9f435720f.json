{
  "uid" : "858e8ad9f435720f",
  "name" : "T28: Create a task with an invalid time.",
  "fullName" : "tests.test_task_management.TestTaskManagement#test_create_task_with_invalid_time",
  "historyId" : "e787cd589deccac9edeb1e7e970ae02c",
  "time" : {
    "start" : 1738503486411,
    "stop" : 1738503487508,
    "duration" : 1097
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Particular suffer.', 'start': 'way', 'end': 'shoulder', 'priority': 'low', 'category': 'done', 'owner': '679f753e6eb12444f2b46d32', 'date': '2025-01-12T00:00:00.000Z', '_id': '679f753f6eb12444f2b46d36', 'createdAt': '2025-02-02T13:38:07.410Z', 'updatedAt': '2025-02-02T13:38:07.410Z', '__v': 0}",
  "statusTrace" : "self = <test_task_management.TestTaskManagement object at 0x7fcf9e3df550>\n\n    @pytest.mark.order(28)\n    @allure.title(\"T28: Create a task with an invalid time.\")\n    def test_create_task_with_invalid_time(self):\n        user = self.api_user_auth.create_user()\n>       self.api_task.create_task_with_invalid_time(Token=user.data.accessToken)\n\ntests/test_task_management.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/Task/api_task.py:100: in create_task_with_invalid_time\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.Task.api_task.TaskAPI object at 0x7fcf9e424150>\nresponse = <Response [201]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 201. Response: {'title': 'Particular suffer.', 'start': 'way', 'end': 'shoulder', 'priority': 'low', 'category': 'done', 'owner': '679f753e6eb12444f2b46d32', 'date': '2025-01-12T00:00:00.000Z', '_id': '679f753f6eb12444f2b46d36', 'createdAt': '2025-02-02T13:38:07.410Z', 'updatedAt': '2025-02-02T13:38:07.410Z', '__v': 0}\n\nutils/helper.py:13: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestTaskManagement",
    "time" : {
      "start" : 1738503486411,
      "stop" : 1738503486411,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1738503462448,
      "stop" : 1738503462449,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Particular suffer.', 'start': 'way', 'end': 'shoulder', 'priority': 'low', 'category': 'done', 'owner': '679f753e6eb12444f2b46d32', 'date': '2025-01-12T00:00:00.000Z', '_id': '679f753f6eb12444f2b46d36', 'createdAt': '2025-02-02T13:38:07.410Z', 'updatedAt': '2025-02-02T13:38:07.410Z', '__v': 0}",
    "statusTrace" : "self = <test_task_management.TestTaskManagement object at 0x7fcf9e3df550>\n\n    @pytest.mark.order(28)\n    @allure.title(\"T28: Create a task with an invalid time.\")\n    def test_create_task_with_invalid_time(self):\n        user = self.api_user_auth.create_user()\n>       self.api_task.create_task_with_invalid_time(Token=user.data.accessToken)\n\ntests/test_task_management.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/Task/api_task.py:100: in create_task_with_invalid_time\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.Task.api_task.TaskAPI object at 0x7fcf9e424150>\nresponse = <Response [201]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 201. Response: {'title': 'Particular suffer.', 'start': 'way', 'end': 'shoulder', 'priority': 'low', 'category': 'done', 'owner': '679f753e6eb12444f2b46d32', 'date': '2025-01-12T00:00:00.000Z', '_id': '679f753f6eb12444f2b46d36', 'createdAt': '2025-02-02T13:38:07.410Z', 'updatedAt': '2025-02-02T13:38:07.410Z', '__v': 0}\n\nutils/helper.py:13: AssertionError",
    "steps" : [ {
      "name" : "Create a new user.",
      "time" : {
        "start" : 1738503486411,
        "stop" : 1738503487024,
        "duration" : 613
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5ade9e1b4cdddf8b",
        "name" : "API Response",
        "source" : "5ade9e1b4cdddf8b.json",
        "type" : "application/json",
        "size" : 518
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Create a task with an invalid time.",
      "time" : {
        "start" : 1738503487024,
        "stop" : 1738503487508,
        "duration" : 484
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Particular suffer.', 'start': 'way', 'end': 'shoulder', 'priority': 'low', 'category': 'done', 'owner': '679f753e6eb12444f2b46d32', 'date': '2025-01-12T00:00:00.000Z', '_id': '679f753f6eb12444f2b46d36', 'createdAt': '2025-02-02T13:38:07.410Z', 'updatedAt': '2025-02-02T13:38:07.410Z', '__v': 0}\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/services/Task/api_task.py\", line 100, in create_task_with_invalid_time\n    self.assert_status(response, 400)\n  File \"/usr/workspace/utils/helper.py\", line 13, in assert_status\n    assert response.status_code == expected_status, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "Token",
        "value" : "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTNlNmViMTI0NDRmMmI0NmQzMiIsImlhdCI6MTczODUwMzQ4NiwiZXhwIjoxNzM4NTA3MDg2fQ.AwdWdMX8nr6q59T1npTVMBZ7IFLd76rnXCt9s_zgnyY'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestTaskManagement::0",
    "time" : {
      "start" : 1738503487515,
      "stop" : 1738503487515,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Task Management"
  }, {
    "name" : "tag",
    "value" : "order(28)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_task_management"
  }, {
    "name" : "subSuite",
    "value" : "TestTaskManagement"
  }, {
    "name" : "host",
    "value" : "1ae841824f73"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_task_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "d9a420735028783b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Send.', 'start': 'over', 'end': 'artist', 'priority': 'high', 'category': 'done', 'owner': '6793b6b96eb12444f2b46c4c', 'date': '2025-01-02T00:00:00.000Z', '_id': '6793b6ba6eb12444f2b46c50', 'createdAt': '2025-01-24T15:50:18.424Z', 'updatedAt': '2025-01-24T15:50:18.424Z', '__v': 0}",
        "time" : {
          "start" : 1737733817647,
          "stop" : 1737733818498,
          "duration" : 851
        }
      }, {
        "uid" : "ea599f49fb85c758",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Establish paper.', 'start': 'early', 'end': 'hear', 'priority': 'low', 'category': 'to-do', 'owner': '678f9ca26eb12444f2b46b78', 'date': '2025-01-17T00:00:00.000Z', '_id': '678f9ca36eb12444f2b46b7c', 'createdAt': '2025-01-21T13:09:55.364Z', 'updatedAt': '2025-01-21T13:09:55.364Z', '__v': 0}",
        "time" : {
          "start" : 1737464994593,
          "stop" : 1737464995438,
          "duration" : 845
        }
      }, {
        "uid" : "338da8baf907c96b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Father probably.', 'start': 'particular', 'end': 'choice', 'priority': 'low', 'category': 'done', 'owner': '678f7fe06eb12444f2b46aa4', 'date': '2025-01-01T00:00:00.000Z', '_id': '678f7fe16eb12444f2b46aa8', 'createdAt': '2025-01-21T11:07:13.048Z', 'updatedAt': '2025-01-21T11:07:13.048Z', '__v': 0}",
        "time" : {
          "start" : 1737457632195,
          "stop" : 1737457633135,
          "duration" : 940
        }
      }, {
        "uid" : "a807af2c4c3d02be",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Area other hard difference.', 'start': 'area', 'end': 'trial', 'priority': 'low', 'category': 'to-do', 'owner': '678e577b6eb12444f2b469d3', 'date': '2025-01-14T00:00:00.000Z', '_id': '678e577b6eb12444f2b469d7', 'createdAt': '2025-01-20T14:02:35.771Z', 'updatedAt': '2025-01-20T14:02:35.771Z', '__v': 0}",
        "time" : {
          "start" : 1737381754986,
          "stop" : 1737381755849,
          "duration" : 863
        }
      }, {
        "uid" : "433a4c7c1ef4e78d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Only provide and.', 'start': 'campaign', 'end': 'before', 'priority': 'low', 'category': 'done', 'owner': '678e4cb36eb12444f2b46902', 'date': '2025-01-10T00:00:00.000Z', '_id': '678e4cb46eb12444f2b46906', 'createdAt': '2025-01-20T13:16:36.500Z', 'updatedAt': '2025-01-20T13:16:36.500Z', '__v': 0}",
        "time" : {
          "start" : 1737378995485,
          "stop" : 1737378996602,
          "duration" : 1117
        }
      }, {
        "uid" : "3c3ad389f62335aa",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 201. Response: {'title': 'Three very.', 'start': 'fall', 'end': 'collection', 'priority': 'medium', 'category': 'done', 'owner': '678e49f96eb12444f2b4682e', 'date': '2025-01-05T00:00:00.000Z', '_id': '678e49f96eb12444f2b46832', 'createdAt': '2025-01-20T13:04:57.970Z', 'updatedAt': '2025-01-20T13:04:57.970Z', '__v': 0}",
        "time" : {
          "start" : 1737378297199,
          "stop" : 1737378297710,
          "duration" : 511
        }
      } ]
    },
    "tags" : [ "order(28)" ]
  },
  "source" : "858e8ad9f435720f.json",
  "parameterValues" : [ ]
}