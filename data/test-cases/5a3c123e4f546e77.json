{
  "uid" : "5a3c123e4f546e77",
  "name" : "T20: Update user info with an invalid email.",
  "fullName" : "tests.test_user_authentication.TestUserAuthentication#test_update_user_info_with_invalid_email",
  "historyId" : "816aeb0a7bb5505d8d81e499c4d96038",
  "time" : {
    "start" : 1738503477642,
    "stop" : 1738503478797,
    "duration" : 1155
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '679f75366eb12444f2b46d04', 'name': 'Breanna', 'email': 'ohayes', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzM4NTA3MDc4fQ.hfLNZSFlvStu_8BOh2zUXUEotz0UYoaZZ6k3_yYDXIc', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzQxMDk1NDc4fQ.uUXcZDMz9vnqh8A5zjM4mAfOvAjh0DUQiLeJK4XF9fE', 'phone': '001-562-575-6156x422', 'birthday': '2018-05-17', 'skype': 'daniel25', 'userImgUrl': 'https://picsum.photos/777/615', 'userTasks': []}",
  "statusTrace" : "self = <test_user_authentication.TestUserAuthentication object at 0x7fcf9fd1bed0>\n\n    @pytest.mark.order(20)\n    @allure.title(\"T20: Update user info with an invalid email.\")\n    def test_update_user_info_with_invalid_email(self):\n        user = self.api_user_auth.create_user()\n>       self.api_user_auth.update_user_info_with_invalid_email(Token=user.data.accessToken)\n\ntests/test_user_authentication.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/UserAuth/api_user_auth.py:241: in update_user_info_with_invalid_email\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.UserAuth.api_user_auth.UserAuthAPI object at 0x7fcf9e42d110>\nresponse = <Response [200]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 200. Response: {'_id': '679f75366eb12444f2b46d04', 'name': 'Breanna', 'email': 'ohayes', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzM4NTA3MDc4fQ.hfLNZSFlvStu_8BOh2zUXUEotz0UYoaZZ6k3_yYDXIc', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzQxMDk1NDc4fQ.uUXcZDMz9vnqh8A5zjM4mAfOvAjh0DUQiLeJK4XF9fE', 'phone': '001-562-575-6156x422', 'birthday': '2018-05-17', 'skype': 'daniel25', 'userImgUrl': 'https://picsum.photos/777/615', 'userTasks': []}\n\nutils/helper.py:13: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1738503462448,
      "stop" : 1738503462449,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_method_fixture_TestUserAuthentication",
    "time" : {
      "start" : 1738503477642,
      "stop" : 1738503477642,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '679f75366eb12444f2b46d04', 'name': 'Breanna', 'email': 'ohayes', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzM4NTA3MDc4fQ.hfLNZSFlvStu_8BOh2zUXUEotz0UYoaZZ6k3_yYDXIc', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzQxMDk1NDc4fQ.uUXcZDMz9vnqh8A5zjM4mAfOvAjh0DUQiLeJK4XF9fE', 'phone': '001-562-575-6156x422', 'birthday': '2018-05-17', 'skype': 'daniel25', 'userImgUrl': 'https://picsum.photos/777/615', 'userTasks': []}",
    "statusTrace" : "self = <test_user_authentication.TestUserAuthentication object at 0x7fcf9fd1bed0>\n\n    @pytest.mark.order(20)\n    @allure.title(\"T20: Update user info with an invalid email.\")\n    def test_update_user_info_with_invalid_email(self):\n        user = self.api_user_auth.create_user()\n>       self.api_user_auth.update_user_info_with_invalid_email(Token=user.data.accessToken)\n\ntests/test_user_authentication.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/UserAuth/api_user_auth.py:241: in update_user_info_with_invalid_email\n    self.assert_status(response, 400)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.UserAuth.api_user_auth.UserAuthAPI object at 0x7fcf9e42d110>\nresponse = <Response [200]>, expected_status = 400\n\n    def assert_status(self, response, expected_status):\n>       assert response.status_code == expected_status, \\\n            (f\"Expected status code {expected_status}, but got {response.status_code}. Response: {response.json()}\")\nE       AssertionError: Expected status code 400, but got 200. Response: {'_id': '679f75366eb12444f2b46d04', 'name': 'Breanna', 'email': 'ohayes', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzM4NTA3MDc4fQ.hfLNZSFlvStu_8BOh2zUXUEotz0UYoaZZ6k3_yYDXIc', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzQxMDk1NDc4fQ.uUXcZDMz9vnqh8A5zjM4mAfOvAjh0DUQiLeJK4XF9fE', 'phone': '001-562-575-6156x422', 'birthday': '2018-05-17', 'skype': 'daniel25', 'userImgUrl': 'https://picsum.photos/777/615', 'userTasks': []}\n\nutils/helper.py:13: AssertionError",
    "steps" : [ {
      "name" : "Create a new user.",
      "time" : {
        "start" : 1738503477643,
        "stop" : 1738503478274,
        "duration" : 631
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "6943557c2e560f26",
        "name" : "API Response",
        "source" : "6943557c2e560f26.json",
        "type" : "application/json",
        "size" : 521
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Update user info with an invalid email.",
      "time" : {
        "start" : 1738503478274,
        "stop" : 1738503478796,
        "duration" : 522
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '679f75366eb12444f2b46d04', 'name': 'Breanna', 'email': 'ohayes', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzM4NTA3MDc4fQ.hfLNZSFlvStu_8BOh2zUXUEotz0UYoaZZ6k3_yYDXIc', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzQxMDk1NDc4fQ.uUXcZDMz9vnqh8A5zjM4mAfOvAjh0DUQiLeJK4XF9fE', 'phone': '001-562-575-6156x422', 'birthday': '2018-05-17', 'skype': 'daniel25', 'userImgUrl': 'https://picsum.photos/777/615', 'userTasks': []}\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/services/UserAuth/api_user_auth.py\", line 241, in update_user_info_with_invalid_email\n    self.assert_status(response, 400)\n  File \"/usr/workspace/utils/helper.py\", line 13, in assert_status\n    assert response.status_code == expected_status, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "Token",
        "value" : "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OWY3NTM2NmViMTI0NDRmMmI0NmQwNCIsImlhdCI6MTczODUwMzQ3OCwiZXhwIjoxNzM4NTA3MDc4fQ.hfLNZSFlvStu_8BOh2zUXUEotz0UYoaZZ6k3_yYDXIc'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestUserAuthentication::0",
    "time" : {
      "start" : 1738503478803,
      "stop" : 1738503478803,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "User Authentication"
  }, {
    "name" : "tag",
    "value" : "order(20)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_user_authentication"
  }, {
    "name" : "subSuite",
    "value" : "TestUserAuthentication"
  }, {
    "name" : "host",
    "value" : "1ae841824f73"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_user_authentication"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "f464b673de7c1986",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '6793b6b26eb12444f2b46c1e', 'name': 'John', 'email': 'fnorris', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTNiNmIyNmViMTI0NDRmMmI0NmMxZSIsImlhdCI6MTczNzczMzgxMCwiZXhwIjoxNzM3NzM3NDEwfQ.mWDwyTl0jUrSXn4oRDos2_IIOrb4LAMkfLiGIMmldxs', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTNiNmIyNmViMTI0NDRmMmI0NmMxZSIsImlhdCI6MTczNzczMzgxMCwiZXhwIjoxNzQwMzI1ODEwfQ.rISXeoUovna2xxmRuvUtLZdLB_EZT3ODSFYEQH1eVKk', 'phone': '001-500-633-3827x416', 'birthday': '1925-03-03', 'skype': 'cparker', 'userImgUrl': 'https://picsum.photos/451/232', 'userTasks': []}",
        "time" : {
          "start" : 1737733810571,
          "stop" : 1737733811469,
          "duration" : 898
        }
      }, {
        "uid" : "d3267845f504ccb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678f9c9b6eb12444f2b46b4a', 'name': 'Michael', 'email': 'qcox', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGY5YzliNmViMTI0NDRmMmI0NmI0YSIsImlhdCI6MTczNzQ2NDk4NywiZXhwIjoxNzM3NDY4NTg3fQ.Sf48bqNQs8Pmos4mz0her34yYY9nHgyY95BHD3d33oo', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGY5YzliNmViMTI0NDRmMmI0NmI0YSIsImlhdCI6MTczNzQ2NDk4NywiZXhwIjoxNzQwMDU2OTg3fQ.5ON_WmmHVAJ1ft30tBCJ5dqJWOLvq0Z0a9toPacu9qY', 'phone': '891.612.8172x752', 'birthday': '1957-09-09', 'skype': 'vjohnson', 'userImgUrl': 'https://picsum.photos/879/712', 'userTasks': []}",
        "time" : {
          "start" : 1737464987515,
          "stop" : 1737464988410,
          "duration" : 895
        }
      }, {
        "uid" : "d0f3101d2fe13d46",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678f7fd96eb12444f2b46a79', 'name': 'Erik', 'email': 'cosborn', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGY3ZmQ5NmViMTI0NDRmMmI0NmE3OSIsImlhdCI6MTczNzQ1NzYyNSwiZXhwIjoxNzM3NDYxMjI1fQ.3wBJioghO8sbcDdbynpnD9SIJsIIA2jq2TlEDGQWVYk', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGY3ZmQ5NmViMTI0NDRmMmI0NmE3OSIsImlhdCI6MTczNzQ1NzYyNSwiZXhwIjoxNzQwMDQ5NjI1fQ.HG2Z0V6qxXVxLgSKQJlYCKlhFvpqtpSeu9hU6VYg6VY', 'phone': '(236)836-3414x979', 'birthday': '1976-02-13', 'skype': 'crystalsanders', 'userImgUrl': 'https://picsum.photos/730/190', 'userTasks': []}",
        "time" : {
          "start" : 1737457625270,
          "stop" : 1737457626280,
          "duration" : 1010
        }
      }, {
        "uid" : "b08292408535c703",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e57746eb12444f2b469a5', 'name': 'Thomas', 'email': 'raymondelizabeth', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1Nzc0NmViMTI0NDRmMmI0NjlhNSIsImlhdCI6MTczNzM4MTc0OCwiZXhwIjoxNzM3Mzg1MzQ4fQ.-igAeJEKTBEpzZpIYI9P5cYHTU3a60vMpWhrbFGINVY', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU1Nzc0NmViMTI0NDRmMmI0NjlhNSIsImlhdCI6MTczNzM4MTc0OCwiZXhwIjoxNzM5OTczNzQ4fQ.bVvjF1NlqNw5ufMlJHC-bhydSC5M5Ushvs3iw9XONho', 'phone': '001-902-352-1198x91031', 'birthday': '1950-06-09', 'skype': 'richardsonrobert', 'userImgUrl': 'https://placekitten.com/883/573', 'userTasks': []}",
        "time" : {
          "start" : 1737381748177,
          "stop" : 1737381749058,
          "duration" : 881
        }
      }, {
        "uid" : "6c1ca94d9f827637",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e4cab6eb12444f2b468d4', 'name': 'Michael', 'email': 'uwilliamson', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0Y2FiNmViMTI0NDRmMmI0NjhkNCIsImlhdCI6MTczNzM3ODk4NywiZXhwIjoxNzM3MzgyNTg3fQ.9ZXx-i2g13r66IGyxKd9MZkj24dzj0OStNNFucMCPm4', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0Y2FiNmViMTI0NDRmMmI0NjhkNCIsImlhdCI6MTczNzM3ODk4NywiZXhwIjoxNzM5OTcwOTg3fQ.EUaQuBkbG2H-zpxrdBqSGTwi-5eXZipIanCwfUV0Z68', 'phone': '(357)297-5729x99949', 'birthday': '1979-11-08', 'skype': 'melissacarter', 'userImgUrl': 'https://dummyimage.com/801x354', 'userTasks': []}",
        "time" : {
          "start" : 1737378986657,
          "stop" : 1737378987812,
          "duration" : 1155
        }
      }, {
        "uid" : "d13fd2922b13a8fa",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status code 400, but got 200. Response: {'_id': '678e49f56eb12444f2b46800', 'name': 'Carolyn', 'email': 'brianlewis', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0OWY1NmViMTI0NDRmMmI0NjgwMCIsImlhdCI6MTczNzM3ODI5MywiZXhwIjoxNzM3MzgxODkzfQ.WFntO2Jtr0HJJxPwi2xyTXlk6lhqXmIh-gszrveo24A', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OGU0OWY1NmViMTI0NDRmMmI0NjgwMCIsImlhdCI6MTczNzM3ODI5MywiZXhwIjoxNzM5OTcwMjkzfQ.bkUQ9FTquHTzURxH3jMVf6Zs1ZGnqHQLaGoDqLGU11Q', 'phone': '941.987.5515x336', 'birthday': '2019-10-12', 'skype': 'asanders', 'userImgUrl': 'https://dummyimage.com/586x939', 'userTasks': []}",
        "time" : {
          "start" : 1737378293302,
          "stop" : 1737378293826,
          "duration" : 524
        }
      } ]
    },
    "tags" : [ "order(20)" ]
  },
  "source" : "5a3c123e4f546e77.json",
  "parameterValues" : [ ]
}